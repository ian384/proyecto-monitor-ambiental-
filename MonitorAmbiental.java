/**
 * Clase principal del proyecto, define carga y modela
 * los diferentes elementos y eventos de la interfaz gráfica
 * a su vez que implementa métodos que permiten la gestión
 * de las diferentes comunas (Carga, selección, modificación
 * de comunas)
 */
package co.com.projecto.monitorambiental;

import co.com.projecto.monitorambiental.util.Funciones;
import co.com.projecto.monitorambiental.util.GestorArchivos;
import com.github.weisj.darklaf.LafManager;
import com.github.weisj.darklaf.theme.DarculaTheme;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.*;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ToolTipManager;
import javax.swing.filechooser.FileNameExtensionFilter;


public class MonitorAmbiental extends javax.swing.JFrame {

    private static final String ERRORGUARDAR = "No se puede guardar, por favor verifique el campo %s";
    private String rutaArchivo = "";
    private String rutaImagen = "";
    // Instancia de la clase de apoyo gestor archivos
    private final GestorArchivos utilArchivos = new GestorArchivos();
    private List<Comuna> comunas = new ArrayList<>();

    /**
     * Método que carga en el Jlist las comunas
     */
    private void cargarComunas() {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Comuna comuna : comunas) {
            listModel.addElement(comuna.getNombre());
        }
        jLabelIcaMasAlto.setText(Funciones.nombreComunaConMasIca(comunas));
        jLabelRuidoMasAlto.setText(Funciones.numHabComunaMasRuidosa(comunas));
        jListComunas.setModel(listModel);
    }

    /**
     * Método utilitario que permite definir el estado (editable o no editable)
     * de algunos campos que manejan inforamción de la comuna
     *
     * @param estado booleano que indica si los campos son editables o no
     */
    private void estadoCampos(boolean estado) {
        jListComunas.setEnabled(estado);
        botonAgregarComuna.setEnabled(estado);
        tfNombre.setEnabled(estado);
        tfNumHabitantes.setEnabled(estado);
        tfIndiceCalidadAire.setEnabled(estado);
        tfNivelRuido.setEnabled(estado);
        cbBasuras.setEnabled(estado);
        botonGuardarComuna.setEnabled(estado);
        botonCargarImagen.setEnabled(estado);

    }

    /**
     * Clase que habilita los campos que modelan información de la comuna en la
     * interfaz gráfica
     */
    void habilitarCampos() {
        estadoCampos(true);
    }

    /**
     * Clase que deshabilita los campos que modelan información de la comuna en
     * la interfaz gráfica
     */
    void deshabilitarCampos() {
        estadoCampos(false);
    }

    /**
     * Creates new form MonitorAmbiental
     */
    public MonitorAmbiental() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfRuta = new javax.swing.JTextField();
        botonCrear = new javax.swing.JButton();
        botonCargar = new javax.swing.JButton();
        jPMain = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListComunas = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfNumHabitantes = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfIndiceCalidadAire = new javax.swing.JTextField();
        tfNivelRuido = new javax.swing.JTextField();
        botonAgregarComuna = new javax.swing.JButton();
        cbBasuras = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        valorICA = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        valorRuido = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabelIcaMasAlto = new javax.swing.JLabel();
        jLabelRuidoMasAlto = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        botonGuardarComuna = new javax.swing.JButton();
        botonCargarImagen = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MONITOR AMBIENTAL");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MONITOR AMBIENTAL");

        jLabel2.setText("Ruta del archivo");

        tfRuta.setText("Por favor escriba la ruta para crear o seleccione un archivo");
        tfRuta.setToolTipText("");
        tfRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRutaActionPerformed(evt);
            }
        });

        botonCrear.setText("Crear");
        botonCrear.setToolTipText("");
        botonCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });

        botonCargar.setText("Cargar archivo");
        botonCargar.setToolTipText("");
        botonCargar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(botonCrear)
                .addGap(40, 40, 40)
                .addComponent(botonCargar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addComponent(tfRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(botonCrear)
                .addComponent(botonCargar))
        );

        jPMain.setEnabled(false);

        jListComunas.setBackground(new java.awt.Color(0, 0, 51));
        jListComunas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "No existe información" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListComunas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListComunas.setEnabled(false);
        jListComunas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListComunasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListComunas);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Comunas");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Comunas más afectadas");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Información de la comuna");

        jLabel6.setText("Nombre");

        tfNombre.setText("Ninguna seleccionada");
        tfNombre.setEnabled(false);
        tfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreActionPerformed(evt);
            }
        });

        jLabel7.setText("Número de habitantes");

        tfNumHabitantes.setEnabled(false);

        jLabel8.setText("Indice de calidad aire (ICA)");

        jLabel9.setText("Nivel de ruido (db)");

        tfIndiceCalidadAire.setEnabled(false);
        tfIndiceCalidadAire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIndiceCalidadAireKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIndiceCalidadAireKeyTyped(evt);
            }
        });

        tfNivelRuido.setEnabled(false);
        tfNivelRuido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNivelRuidoKeyReleased(evt);
            }
        });

        botonAgregarComuna.setText("Agregar comuna");
        botonAgregarComuna.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregarComuna.setEnabled(false);
        botonAgregarComuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarComunaActionPerformed(evt);
            }
        });

        cbBasuras.setText("Basuras");
        cbBasuras.setAlignmentY(0.0F);
        cbBasuras.setEnabled(false);
        cbBasuras.setMargin(new java.awt.Insets(2, 0, 2, 2));
        cbBasuras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBasurasActionPerformed(evt);
            }
        });

        jLabel10.setText("Clasificación: ");

        valorICA.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        valorICA.setText("Valor no válido");

        jLabel12.setText("Clasificación: ");

        valorRuido.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        valorRuido.setText("Valor no válido");

        jLabel15.setText("Nombre comuna con ICA mas alto");

        jLabelIcaMasAlto.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabelIcaMasAlto.setText("No existe información");

        jLabelRuidoMasAlto.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabelRuidoMasAlto.setText("No existe información");

        jLabel19.setText("Num habitantes comuna mas ruidosa");

        botonGuardarComuna.setText("Guardar comuna");
        botonGuardarComuna.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonGuardarComuna.setEnabled(false);
        botonGuardarComuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarComunaActionPerformed(evt);
            }
        });

        botonCargarImagen.setText("Cargar imágen");
        botonCargarImagen.setEnabled(false);
        botonCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarImagenActionPerformed(evt);
            }
        });

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setText("Imágen");
        imageLabel.setMaximumSize(new java.awt.Dimension(101, 134));

        javax.swing.GroupLayout jPMainLayout = new javax.swing.GroupLayout(jPMain);
        jPMain.setLayout(jPMainLayout);
        jPMainLayout.setHorizontalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonAgregarComuna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(251, 251, 251))
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPMainLayout.createSequentialGroup()
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPMainLayout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPMainLayout.createSequentialGroup()
                                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(tfNumHabitantes, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tfNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
                                            .addComponent(tfIndiceCalidadAire, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPMainLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPMainLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(tfNivelRuido, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(52, 161, Short.MAX_VALUE))
                                    .addGroup(jPMainLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(valorICA, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPMainLayout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(valorRuido, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 109, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonCargarImagen)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPMainLayout.createSequentialGroup()
                        .addComponent(cbBasuras, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(botonGuardarComuna, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelRuidoMasAlto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIcaMasAlto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPMainLayout.setVerticalGroup(
            jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMainLayout.createSequentialGroup()
                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPMainLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(jPMainLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPMainLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(tfNombre)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNumHabitantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPMainLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(tfIndiceCalidadAire, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valorICA, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPMainLayout.createSequentialGroup()
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNivelRuido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valorRuido, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPMainLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cbBasuras))
                                    .addGroup(jPMainLayout.createSequentialGroup()
                                        .addComponent(botonGuardarComuna)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPMainLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabelIcaMasAlto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelRuidoMasAlto))))
                    .addGroup(jPMainLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(botonCargarImagen)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonAgregarComuna))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción del evento click del boton crear
     *
     * @param evt
     */
    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
        // Manipulación de logs en consola
        Logger.getLogger(MonitorAmbiental.class.getName()).log(java.util.logging.Level.INFO, "Click boton crear");
        String ruta = tfRuta.getText();
        if (ruta != null
                && !ruta.equalsIgnoreCase("No se seleccionó ningún archivo")
                && !ruta.equalsIgnoreCase("Por favor escriba la ruta para crear o seleccione un archivo")) {
            File f = new File(ruta);
            if (f.exists()) {
                JOptionPane.showMessageDialog(null, "El archivo ya existe");
                botonCargarActionPerformed(null);
            } else {
                if (!ruta.endsWith(".txt")) {
                    ruta = ruta.concat(".txt");
                }
                rutaArchivo = ruta;
                tfRuta.setText(rutaArchivo);
                comunas = utilArchivos.leerComunas(rutaArchivo);
                cargarComunas();
            }
        } else {
            JOptionPane.showMessageDialog(null, "La ruta no es válida");
        }
    }//GEN-LAST:event_botonCrearActionPerformed


    private void tfRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRutaActionPerformed

    /**
     * Acción del evento click del boton cargar
     *
     * @param evt
     */
    private void botonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarActionPerformed
        deshabilitarCampos();
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Archivos de texto", "txt");
        fc.setFileFilter(fileFilter);
        fc.showOpenDialog(null);
        File auxFile = fc.getSelectedFile();
        if (auxFile != null) {
            rutaArchivo = auxFile.getAbsolutePath();
            tfRuta.setText(rutaArchivo);
            comunas = utilArchivos.leerComunas(rutaArchivo);
            cargarComunas();
            jListComunas.setEnabled(true);
            botonAgregarComuna.setEnabled(true);
            
        }
        

    }//GEN-LAST:event_botonCargarActionPerformed

    /**
     * Acción del evento click del boton agregar comuna
     *
     * @param evt
     */
    private void botonAgregarComunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarComunaActionPerformed
        // TODO add your handling code here:
        habilitarCampos();
        jListComunas.setEnabled(false);
        botonGuardarComuna.setEnabled(true);

    }//GEN-LAST:event_botonAgregarComunaActionPerformed

    private void cbBasurasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBasurasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBasurasActionPerformed

    /**
     * Acción del evento click del boton guardar comuna
     *
     * @param evt
     */
    private void botonGuardarComunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarComunaActionPerformed
        // Se crea una comuna y se aplican validaciones a los valores de los campos
        Comuna nueva = new Comuna();
        String vlrNombre = tfNombre.getText();
        if (Funciones.noNulo(vlrNombre)) {
            nueva.setNombre(vlrNombre);
        } else {
            JOptionPane.showMessageDialog(null, String.format(ERRORGUARDAR, "Nombre"));
        }
        String vlrNumHab = tfNumHabitantes.getText();
        if (Funciones.noNulo(vlrNumHab)) {
            nueva.setNumHabitantes(Integer.parseInt(vlrNumHab));
        } else {
            JOptionPane.showMessageDialog(null, String.format(ERRORGUARDAR, "Número habitantes"));
        }
        String vlrIca = tfIndiceCalidadAire.getText();
        if (Funciones.noNulo(vlrIca)) {
            nueva.setIndiceCalidadAire(Integer.parseInt(vlrIca));
        } else {
            JOptionPane.showMessageDialog(null, String.format(ERRORGUARDAR, "Indice calidad aire"));
        }
        String vlrRuido = tfNivelRuido.getText();
        if (Funciones.noNulo(vlrRuido)) {
            nueva.setNivelRuido(Integer.parseInt(vlrRuido));
        } else {
            JOptionPane.showMessageDialog(null, String.format(ERRORGUARDAR, "Nivel de ruido"));
        }
        nueva.setBasuras(cbBasuras.isSelected());

        Funciones.agregarComuna(nueva, comunas);
        utilArchivos.agregarEditar(rutaArchivo, comunas);
        utilArchivos.leerComunas(rutaArchivo);
        cargarComunas();
        jListComunas.setEnabled(true);
        botonAgregarComuna.setEnabled(true);
    }//GEN-LAST:event_botonGuardarComunaActionPerformed
    /**
     * Método que modela el evento de selección de una comuna del JList de
     * comunas
     *
     * @param evt
     */
    private void jListComunasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListComunasValueChanged

        int indice = jListComunas.getSelectedIndex();
        if (indice >= 0) {
            habilitarCampos();
            Comuna seleccion = comunas.get(indice);
            tfNombre.setText(seleccion.getNombre());
            tfNumHabitantes.setText(seleccion.getNumHabitantes().toString());
            tfIndiceCalidadAire.setText(seleccion.getIndiceCalidadAire().toString());
            tfNivelRuido.setText(seleccion.getNivelRuido().toString());
            cbBasuras.setSelected(seleccion.isBasuras());
            valorICA.setText(Funciones.clasificarICA(seleccion.getIndiceCalidadAire()));
            valorRuido.setText(Funciones.clasificarRuido(seleccion.getNivelRuido()));
            rutaImagen = seleccion.getRutaImagen();
            if (Funciones.noNulo(rutaImagen)) {
                Toolkit t = Toolkit.getDefaultToolkit();
                Image i = t.getImage(rutaImagen);
                imageLabel.setIcon(new ImageIcon(i));
            } else imageLabel.setIcon(null);
        }
    }//GEN-LAST:event_jListComunasValueChanged
    /**
     * Método que modela la actualización del campo que corresponde a la
     * clasificación de calidad de aire
     *
     * @param evt
     */
    private void tfIndiceCalidadAireKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIndiceCalidadAireKeyReleased
        String texto = tfIndiceCalidadAire.getText();
        Logger.getLogger(MonitorAmbiental.class.getName()).info("clasifica" + texto);
        valorICA.setText(Funciones.clasificarICA(texto));
    }//GEN-LAST:event_tfIndiceCalidadAireKeyReleased

    private void tfIndiceCalidadAireKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIndiceCalidadAireKeyTyped
        // Método vacio
    }//GEN-LAST:event_tfIndiceCalidadAireKeyTyped

    /**
     * Método que modela la actualización del campo que corresponde a la
     * clasificación del ruido
     *
     * @param evt
     */
    private void tfNivelRuidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNivelRuidoKeyReleased

        String texto = tfNivelRuido.getText();
        Logger.getLogger(MonitorAmbiental.class.getName()).info("clasifica" + texto);
        valorRuido.setText(Funciones.clasificarRuido(texto));
    }//GEN-LAST:event_tfNivelRuidoKeyReleased

    private void tfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombreActionPerformed

    private void botonCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarImagenActionPerformed
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Archivos de imágen", "bmp", "gif", "jpg", "png");
        fc.setFileFilter(fileFilter);
        fc.showOpenDialog(null);
        File auxFile = fc.getSelectedFile();
        if (auxFile != null) {
            rutaImagen = auxFile.getAbsolutePath();
            int indice = jListComunas.getSelectedIndex();
            if (indice >= 0) {
                Comuna seleccion = comunas.get(indice);
                seleccion.setRutaImagen(rutaImagen);
                utilArchivos.agregarEditar(rutaArchivo, comunas);
                utilArchivos.leerComunas(rutaArchivo);
                cargarComunas();
            } else {
                JOptionPane.showMessageDialog(null, "¡No hay ninguna comuna seleccionada!");
            }
        }
    }//GEN-LAST:event_botonCargarImagenActionPerformed

    /**
     * Método principal de la aplicación. Se utiliza la única dependencia del
     * programa "darklaf-core", que permite definir un tema personalizado de
     * Java Swing para la interfaz gráfica. Se inicializa la configuración del
     * tema y se inicializan todos los componentes
     *
     */
    public static void main(String args[]) throws ClassNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Métodos de la libreria "darklaf-core" para setear el tema "darkula"
            LafManager.install(new DarculaTheme());
            ToolTipManager.sharedInstance().setInitialDelay(100);
        } catch (Exception ex) {
            Logger.getLogger(MonitorAmbiental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitorAmbiental().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarComuna;
    private javax.swing.JButton botonCargar;
    private javax.swing.JButton botonCargarImagen;
    private javax.swing.JButton botonCrear;
    private javax.swing.JButton botonGuardarComuna;
    private javax.swing.JCheckBox cbBasuras;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIcaMasAlto;
    private javax.swing.JLabel jLabelRuidoMasAlto;
    private javax.swing.JList<String> jListComunas;
    private javax.swing.JPanel jPMain;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField tfIndiceCalidadAire;
    private javax.swing.JTextField tfNivelRuido;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfNumHabitantes;
    private javax.swing.JTextField tfRuta;
    private javax.swing.JLabel valorICA;
    private javax.swing.JLabel valorRuido;
    // End of variables declaration//GEN-END:variables
}
